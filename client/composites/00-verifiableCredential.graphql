
## our overarching VC interface that acts agnostic of our proof type
interface VerifiableCredential
  @createModel(description: "A verifiable credential interface")
{
  controller: DID! @documentAccount
  issuer: Issuer! 
  context: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  type: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  credentialSchema: CredentialSchema!
  credentialStatus: CredentialStatus
  issuanceDate: DateTime!
  expirationDate: DateTime
}

type Issuer {
  id: String! @string(maxLength: 1000)
  name: String @string(maxLength: 1000)
}

type CredentialStatus {
  id: String! @string(maxLength: 1000)
  type: String! @string(maxLength: 1000)
}

type CredentialSchema {
  id: String! @string(maxLength: 1000)
  type: String! @string(maxLength: 1000)
}

## we'll use interfaces for our proof types to generalize them as well - this one's for EIP712
interface VCEIP712Proof implements VerifiableCredential
  @createModel(description: "A verifiable credential interface of type EIP712")
{
  controller: DID! @documentAccount
  issuer: Issuer! 
  context: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  type: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  credentialSchema: CredentialSchema!
  credentialStatus: CredentialStatus
  issuanceDate: DateTime!
  expirationDate: DateTime
  proof: ProofEIP712!
}

## generalized JWT proof interface
interface VCJWTProof implements VerifiableCredential
  @createModel(description: "A verifiable credential interface of type JWT")
{
  controller: DID! @documentAccount
  issuer: Issuer! 
  context: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  type: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  credentialSchema: CredentialSchema!
  credentialStatus: CredentialStatus
  issuanceDate: DateTime!
  expirationDate: DateTime
  proof: ProofJWT!
}

type ProofEIP712 {
  verificationMethod: String! @string(maxLength: 1000)
  created: DateTime! 
  proofPurpose: String! @string(maxLength: 1000)
  type: String! @string(maxLength: 1000)
  proofValue: String! @string(maxLength: 1000)
  eip712: EIP712!
}

type ProofJWT {
  type: String! @string(maxLength: 1000)
  jwt: String! @string(maxLength: 100000)
}

type EIP712 {
    domain: Domain! 
    types: ProofTypes!
    primaryType: String! @string(maxLength: 100)
}

type Types {
  name: String! @string(maxLength: 100)
  type: String! @string(maxLength: 100)
}

type ProofTypes {
    EIP712Domain: [Types!]! @list(maxLength: 100)
    CredentialSchema: [Types!]! @list(maxLength: 100)
    CredentialSubject: [Types!]! @list(maxLength: 100)
    Proof: [Types!]! @list(maxLength: 100)
    VerifiableCredential: [Types!]! @list(maxLength: 100)
}

type Domain {
  chainId: Int!
  name: String! @string(maxLength: 100)
  version: String! @string(maxLength: 100)
}

type CredentialSubject
{
  id: DID! @accountReference
  isTrusted: Boolean!
}

## define our EIP712 type that uses a hard-coded credentialSubject specific to our use case
type VerifiableCredentialEIP712 implements VerifiableCredential & VCEIP712Proof 
  @createModel(accountRelation: LIST, description: "A verifiable credential of type EIP712")
  @createIndex(fields: [{ path: "issuanceDate" }])
  @createIndex(fields: [{ path: "issuer" }]) {
  controller: DID! @documentAccount
  issuer: Issuer! 
  context: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  type: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  credentialSchema: CredentialSchema!
  credentialStatus: CredentialStatus
  issuanceDate: DateTime!
  expirationDate: DateTime
  proof: ProofEIP712!
  credentialSubject: CredentialSubject! 
}

## define our JWT type that uses a hard-coded credentialSubject specific to our use case
type VerifiableCredentialJWT implements VerifiableCredential & VCJWTProof 
  @createModel(accountRelation: LIST, description: "A verifiable credential of type JWT")
  @createIndex(fields: [{ path: "issuanceDate" }])
  @createIndex(fields: [{ path: "issuer" }]) {
  controller: DID! @documentAccount
  issuer: Issuer! 
  context: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  type: [String!]! @string(maxLength: 1000) @list(maxLength: 100)
  credentialSchema: CredentialSchema!
  credentialStatus: CredentialStatus
  issuanceDate: DateTime!
  expirationDate: DateTime
  proof: ProofJWT!
  credentialSubject: CredentialSubject! 
}


